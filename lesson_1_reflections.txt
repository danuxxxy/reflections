Comparare fisiere/versiuni
Pe mac diff -u oldfile newfile
Pe windows  fp oldfile newfile
pwd # print working directory - shows what directory you are in
ls  # list the files in this directory
#How did viewing a diff between two versions of a file help you see the bug that was introduced?
#It is easier to find and analyze the difference between 2 files and fix them if it is necessary
Dopbox,google docs and wikipedia has the version control stored
#How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
#You can backtrack easier and see where the modifcation were done to change the code
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
PRO manually choosing means that you choose when to commit ,what is the commit criteria based on the project and the priority, risk and severity
CON manully choosing meand tha you cand forget or be wrong with the commit action on a particular time
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because are dependences between them
Using git log and git diff
As a reminder, running git log will show a list of the recent commits with information about them, including commit IDs. Running git diff followed by two commit IDs will compare the two versions of the code in those commits. If you need a refresher, you may want to rewatch this video.
How can you use the commands git log and git diff to view the history of files?
You select command git log for the git project to view all the commits. You use the command git diff and two commit ids  to see the difference
How Do You Want to Use Git?
With SourceTree on MAC
Now that you have your workspace set up, what do you want to try using Git for?
 In my test automatization project 
